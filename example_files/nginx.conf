
user  www-data;
worker_processes auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

#load_module /etc/nginx/modules/ngx_http_image_filter_module.so; 

events {
    worker_connections 1024;
}


http {

    include mime.types;
    
    # # Lesson 22
    # gzip on;
    # gzip_comp_level 3;
    # gzip_types text/css;
    # gzip_types text/javascript;
    # # end Lesson 22

    # Lesson 23
    # fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=MY_NAME:100m inactive=60m;
    # fastcgi_cache_key "$scheme$request_method$request_uri";
    # add_header X-Cache $upstream_cache_status;
    # # uses an MD5 hash
    # end Lesson 23
    
    # Lesson 26
    server {
    if ($host = biiruneko.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

}
    # end Lesson 26

    # Lesson 27
    limit_req_zone $request_uri zone=MY_ZONE:10m rate=60r/m;
    # end Lesson 27
    
    # Lesson 29
    server_tokens off;
    # end Lesson 29
    
    server {
        # Lesson 24
        listen 443 ssl http2;
        server_name biiruneko.com;

        root /sites/demo;
        
        index index.php index.html;
        ssl_certificate /etc/letsencrypt/live/biiruneko.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/biiruneko.com/privkey.pem; # managed by Certbot
        # end Lesson 24
        
        # Lesson 26 Disable SSL! Long live TSL!
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        add_header Strict-Transport-Security "max-age=31536000" always;
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;
        # end Lesson 26
        
        # Lesson 10
        # location /greet {
        #     return 200 'Hello from NGINX /greet URI!';
        # }
        
        # # Lesson 11
        # if ( $arg_key != 1234 ){
        #     return 401 "Incorrect key.";
        # }
        
        # Lesson 12 
        # location /var {
        #     return 200 "$host\n$uri\n$args\nFoo: $arg_foo";
        # }

        # Lesson 13
        # rewrite ^/user/\w+ /greet;
        # rewrite ^/user/(\w+) /greet/$1;
        # rewrite ^/user/(\w+) /greet/$1 last;
        # rewrite ^/greet/john /thumb.png;

        # location = /greet/ross {
        #     return 200 'You are the boss.';
        # }

        # location /greet {
        #     return 200 'Hello from NGINX /greet URI!';
        # }

        # location /logo {
        #     return 307 /thumb.png;
        # }
        
        # Lesson 14
        # try_files $uri /greet /friendly_404;

        # location /greet {
        #     return 200 'Hello from NGINX /greet URI!';
        # }
        
        # location /friendly_404 {
        #     return 404 'Sorry, that URI is no good.';        
        # }

        # # Lesson 15
        # location /greet {
        #     access_log /var/log/nginx/greet_access.log;
        #     return 200 "successful greeting";
        # }
        
        # Lesson 17
        # index index.php index.html;
        
        # location / {
        #     try_files $uri $uri/ =404;
        # }

        # location ~\.php$ {
        #     include fastcgi.conf;
        #     fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        # }

        # Lesson 20
        # location = /thumb.png {
        #     image_filter rotate 180;
        # }

        # Lesson 21
        # location ~* \.(css|js|jpg|png)$ {

        #     access_log off;
        #     add_header my_header "Hello World";
        #     add_header Pragma public;
        #     add_header Vary Accept-Encoding;
        #     expires 60m;
        # }

        # location = /thumb.png {
        #     add_header my_header "Hello World";
        #     add_header Pragma public;
        #     add_header Vary Accept-Encoding;
        #     expires 60m;
        # }

        # Lesson 23
        # location ~\.php$ {
        #     include fastcgi.conf;
        #     fastcgi_pass unix:/run/php/php7.4-fpm.sock;

        #     # Enable the cache
        #     fastcgi_cache MY_NAME;
        #     fastcgi_cache_valid 200 60m;
        #     fastcgi_cache_valid 404 5m;
        # }
        # # end Lesson 23

        # Lesson 27
        location = /thumb.png {
            limit_req zone=MY_ZONE burst=5 nodelay;
        }
        # end Lesson 27

        # Lesson 28
        # location / {
        #     auth_basic "Secure Area";
        #     auth_basic_user_file /etc/nginx/.htpasswd;
        #     try_files $uri $uri/ =404;
        # }
        # end Lesson 28
        
        # Lesson 29
        # add_header X-Frame-Options "SAMEORIGIN";
        # add_header X-XSS-Protection "1; mode=block";
        # end Lesson 29
    
    }
}
